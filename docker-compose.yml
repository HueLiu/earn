version: "3"
services:
  auto-browser:
    image: harleyliu/auto-browser:latest
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.schedule=0 0 1 * * *"
    build: ./auto-browser
    environment:
      - HEADLESS=$HEADLESS
      - ENABLE_CLICK=$ENABLE_CLICK
      - ADNADE_USERNAME=$ADNADE_USERNAME
      - ADNADE_PASSWORD=$ADNADE_PASSWORD
      - EBESUCHER_USERNAME=$EBESUCHER_USERNAME
      - SURFVISITS_USERNAME=$SURFVISITS_USERNAME
      - SURFVISITS_PASSWORD=$SURFVISITS_PASSWORD
    volumes:
      - ./data/auto-browser:/app/data

  # bearshare:
  #   image: bearshare/bearshare:latest
  #   restart: always
  #   command: -email=$BEARSHARE_EMAIL -password=$BEARSHARE_PASSWORD

  bitping:
    image: bitping/bitpingd:latest
    restart: always
    environment:
      - BITPING_EMAIL=$BITPING_EMAIL
      - BITPING_PASSWORD=$BITPING_PASSWORD
    volumes:
      - ./data/bitpingd:/root/.bitpingd

  earnapp:
    image: madereddy/earnapp:latest
    environment:
      - EARNAPP_UUID=$EARNAPP_UUID
    restart: always

  earnfm:
    image: earnfm/earnfm-client:latest
    restart: always
    environment:
      - EARNFM_TOKEN=$EARNFM_TOKEN

  feelingsurf:
    image: feelingsurf/viewer:stable
    restart: always
    environment:
      - access_token=$FEELINGSURF_TOKEN

  # gaganode:
  #   image: jepbura/gaganode:latest
  #   restart: always
  #   environment:
  #     - DOWNLOADLINK=$GAGANODE_DOWNLOADLINK
  #     - FILENAME=$GAGANODE_FILENAME
  #     - TOKEN=$GAGANODE_TOKEN
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.125"
  #         memory: 64M

  # grass:
  #   image: mrcolorrain/grass:latest
  #   restart: always
  #   environment:
  #     - GRASS_USER=$GRASS_USER
  #     - GRASS_PASS=$GRASS_PASS
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.125"
  #         memory: 256M

  honeygain:
    image: honeygain/honeygain:latest
    restart: always
    command: -tou-accept -email $HONEYGAIN_EMAIL -pass '$HONEYGAIN_PASSWD' -device $DEVICE_NAME

  # meson:
  #   image: jepbura/meson:latest
  #   restart: always
  #   ports:
  #     - 9222:9222
  #   environment:
  #     - PORT=9222
  #     - TOKEN=$MESON_TOKEN
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.125"
  #         memory: 64M

  mysterium:
    image: mysteriumnetwork/myst:latest
    restart: always
    environment:
      - MYSTNODE_DUMMY=$MYSTNODE_API_KEY
    command: service --agreed-terms-and-conditions
    cap_add:
      - NET_ADMIN
    ports:
      - 4449:4449
    volumes:
      - ./data/mysterium:/var/lib/mysterium-node

  packetshare:
    image: packetshare/packetshare:latest
    restart: always
    command: -accept-tos -email=$PACKETSHARE_EMAIL -password=$PACKETSHARE_PASSWORD

  packetstream:
    image: packetstream/psclient:latest
    restart: always
    environment:
      - CID=$PACKETSTREAM_CID

  pawnsapp:
    image: iproyal/pawns-cli:latest
    restart: always
    command: -email=$PAWNSAPP_EMAIL -password=$PAWNSAPP_PASSWD -device-name=$DEVICE_NAME -device-id=$DEVICE_NAME -accept-tos

  proxylite:
    image: proxylite/proxyservice:latest
    restart: always
    environment:
      - USER_ID=$PROXYLITE_USER_ID

  proxyrack:
    image: proxyrack/pop:latest
    restart: always
    environment:
      - UUID=$PROXYRACK_UUID

  repocket:
    image: repocket/repocket:latest
    restart: always
    environment:
      - RP_EMAIL=$REPOCKET_EMAIL
      - RP_API_KEY=$REPOCKET_API_KEY

  # speedshare:
  #   image: mrcolorrain/speedshare:latest
  #   restart: always
  #   environment:
  #     - CODE=$SPEEDSHARE_TOKEN
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.125"
  #         memory: 64M

  spidenetwork:
    image: xterna/spide-network:latest
    restart: always

  TraffMonetizer:
    image: traffmonetizer/cli_v2:latest
    restart: always
    command: start accept --token $TRAFFMONETIZER_TOKEN

  # dockerUI:
  #   image: joinsunsoft/docker.ui
  #   restart: always
  #   ports:
  #     - 8999:8999
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
